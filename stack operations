#include <stdio.h>
#define MAX_STACK_SIZE 100

int stack[MAX_STACK_SIZE];
int top = -1;

void push(int item) {
    if (top >= MAX_STACK_SIZE - 1) {
        printf("Stack Overflow!\n");
        return;
    }
    top++;
    stack[top] = item;
}

int pop() {
    int item;
    if (top < 0) {
        printf("Stack Underflow!\n");
        return -1;
    }
    item = stack[top];
    top--;
    return item;
}

int evaluate_postfix(char *expression) {
    int i, operand1, operand2;
    char c;
    for (i = 0; expression[i] != '\0'; i++) {
        c = expression[i];
        if (c >= '0' && c <= '9') {
            push(c - '0');
        }
        else {
            operand2 = pop();
            operand1 = pop();
            switch (c) {
                case '+':
                    push(operand1 + operand2);
                    break;
                case '-':
                    push(operand1 - operand2);
                    break;
                case '*':
                    push(operand1 * operand2);
                    break;
                case '/':
                    push(operand1 / operand2);
                    break;
                default:
                    printf("Invalid Expression!\n");
                    return -1;
            }
        }
    }
    return pop();
}

int main() {
    char postfix_expression[100];
    printf("Enter a postfix expression: ");
    scanf("%s", postfix_expression);
    int result = evaluate_postfix(postfix_expression);
    printf("Result: %d\n", result);
    return 0;
}
